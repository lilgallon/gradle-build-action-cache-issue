name: build and test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "**" ]
    paths:
      - .github/workflows/ci.yml
      - '**/*.kt'
      - '**/*.kts'
      - '**/*.proto'
      - 'gradle.properties'
      - 'gradle/**'

permissions:
  contents: read

jobs:
  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: lilgallon/gradle-build-action-cache-issue

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build common
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
        with:
          gradle-version: 7.6
          build-root-directory: systems/common
          arguments: build --parallel --scan -x test "-Dorg.gradle.jvmargs=-Xmx2G -XX:MaxMetaspaceSize=1G"
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Build all
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
        with:
          gradle-version: 7.6
          arguments: build --parallel --scan -x test "-Dorg.gradle.jvmargs=-Xmx2G -XX:MaxMetaspaceSize=1G"
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Run tests
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
        with:
          gradle-version: 7.6
          arguments: test --no-parallel --scan "-Dorg.gradle.jvmargs=-Xmx2G -XX:MaxMetaspaceSize=1G"
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Cache doctor
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"
          
          if [ ${{ github.head_ref }}="master" ]
          then
            echo "Fetching list of cache key"
            echo $(gh actions-cache list -R $REPO -B $BRANCH)
            ## cacheKey=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
            
            ## Setting this to not fail the workflow while deleting cache keys. 
            ## set +e
            ## echo "Deleting caches..."
            ## for cacheKey in $cacheKeysForPR
            ## do
            ##     gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
            ## done
            ## echo "Done"
          else
            echo "read-only cache"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
